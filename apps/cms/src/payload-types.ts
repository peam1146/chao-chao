/* tslint:disable */
/* eslint-disable */
/**
 * This file was automatically generated by Payload.
 * DO NOT MODIFY IT BY HAND. Instead, modify your source Payload config,
 * and re-run `payload generate:types` to regenerate this file.
 */

export interface Config {
  collections: {
    users: User;
    items: Item;
    medias: Media;
    tags: Tag;
    'payload-preferences': PayloadPreference;
    'payload-migrations': PayloadMigration;
  };
  globals: {};
}
export interface User {
  id: string;
  profileImage?: string | Media;
  phone: string;
  firstName?: string;
  lastName?: string;
  bio?: string;
  rating?: number;
  province?: string;
  stripeCustomerID?: string;
  roles: ('admin' | 'User')[];
  requestsMade?: {
    user: string | User;
    item: string | Item;
    id?: string;
  }[];
  requestsReceived?: {
    user: string | User;
    item: string | Item;
    id?: string;
  }[];
  updatedAt: string;
  createdAt: string;
  email: string;
  resetPasswordToken?: string;
  resetPasswordExpiration?: string;
  salt?: string;
  hash?: string;
  loginAttempts?: number;
  lockUntil?: string;
  password?: string;
}
export interface Media {
  id: string;
  name?: string;
  alt?: string;
  createdBy: string | User;
  updatedAt: string;
  createdAt: string;
  url?: string;
  filename?: string;
  mimeType?: string;
  filesize?: number;
  width?: number;
  height?: number;
}
export interface Item {
  id: string;
  name: string;
  description?: string;
  image: string[] | Media[];
  price?: number;
  availableAt?: string;
  period?: number;
  periodType?: 'days' | 'weeks' | 'months' | 'years';
  rentingStatus?: 'available' | 'unavailable';
  start?: string;
  end?: string;
  tags?: string[] | Tag[];
  createdBy: string | User;
  rating?: number;
  updatedAt: string;
  createdAt: string;
  _status?: 'draft' | 'published';
}
export interface Tag {
  id: string;
  name: string;
  alt?: string;
  createdBy: string | User;
  updatedAt: string;
  createdAt: string;
}
export interface PayloadPreference {
  id: string;
  user: {
    relationTo: 'users';
    value: string | User;
  };
  key?: string;
  value?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  updatedAt: string;
  createdAt: string;
}
export interface PayloadMigration {
  id: string;
  name?: string;
  batch?: number;
  updatedAt: string;
  createdAt: string;
}


declare module 'payload' {
  export interface GeneratedTypes {
    collections: {
      'users': User
      'items': Item
      'medias': Media
      'tags': Tag
      'payload-preferences': PayloadPreference
      'payload-migrations': PayloadMigration
    }

  }
}